{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiasheng/Documents/GitHub/tbj/src/pages/_error.js\";\n// function Error({ statusCode }) {\n//   return (\n//     <p>\n//       {statusCode\n//         ? `An error ${statusCode} occurred on server`\n//         : 'An error occurred on client'}\n//     </p>\n//   )\n// }\n// Error.getInitialProps = ({ res, err }) => {\n//   const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n//   return { statusCode }\n// }\n// export default Error\nimport Error from 'next/error';\nimport fetch from 'isomorphic-unfetch';\n\nconst Page = ({\n  errorCode,\n  stars\n}) => {\n  if (errorCode) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      statusCode: errorCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Next stars: \", stars]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\nPage.getInitialProps = async () => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js');\n  const errorCode = res.statusCode > 200 ? res.statusCode : false;\n  const json = await res.json();\n  return {\n    errorCode,\n    stars: json.stargazers_count\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/jiasheng/Documents/GitHub/tbj/src/pages/_error.js"],"names":["Error","fetch","Page","errorCode","stars","getInitialProps","res","statusCode","json","stargazers_count"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACrC,MAAID,SAAJ,EAAe;AACb,wBAAO,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO;AAAA,+BAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAND;;AAQAF,IAAI,CAACG,eAAL,GAAuB,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAML,KAAK,CAAC,2CAAD,CAAvB;AACA,QAAME,SAAS,GAAGG,GAAG,CAACC,UAAJ,GAAiB,GAAjB,GAAuBD,GAAG,CAACC,UAA3B,GAAwC,KAA1D;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AAAEL,IAAAA,SAAF;AAAaC,IAAAA,KAAK,EAAEI,IAAI,CAACC;AAAzB,GAAP;AACD,CAND;;AAQA,eAAeP,IAAf","sourcesContent":["// function Error({ statusCode }) {\n//   return (\n//     <p>\n//       {statusCode\n//         ? `An error ${statusCode} occurred on server`\n//         : 'An error occurred on client'}\n//     </p>\n//   )\n// }\n\n// Error.getInitialProps = ({ res, err }) => {\n//   const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n//   return { statusCode }\n// }\n\n// export default Error\n\nimport Error from 'next/error'\nimport fetch from 'isomorphic-unfetch'\n\nconst Page = ({ errorCode, stars }) => {\n  if (errorCode) {\n    return <Error statusCode={errorCode} />\n  }\n\n  return <div>Next stars: {stars}</div>\n}\n\nPage.getInitialProps = async () => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  const errorCode = res.statusCode > 200 ? res.statusCode : false\n  const json = await res.json()\n\n  return { errorCode, stars: json.stargazers_count }\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}