{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiasheng/Documents/GitHub/tbj/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jiasheng/Documents/GitHub/tbj/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// import { SERVER_HOST, SERVER_PORT } from \"../../config\";\nimport { store } from \"../../src/state/redux/store\";\nimport fetch from \"isomorphic-unfetch\";\nexport var isomorphicUnfetchData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref\n  /* { req, route, method = \"GET\", body } */\n  ) {\n    var req, route, method, body, response, error;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req, route = _ref.route, method = _ref.method, body = _ref.body;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"\".concat(SERVER_HOST, \":\").concat(SERVER_PORT, \"/\").concat(route), {\n              method: method,\n              headers: {\n                \"Content-Type\": \"application/json\",\n                cookie: req ? req.headers.cookie : undefined\n              },\n              body: body ? JSON.stringify(body) : undefined,\n              credentials: \"include\"\n            });\n\n          case 4:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.json());\n\n          case 9:\n            error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n\n            if (response.status == 401) {\n              store.dispatch({\n                type: \"UNAUTHORIZED_REDIRECT\"\n              }); // throw \"unauthorized access\";\n            }\n\n            error.response = response;\n            throw error;\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"error\", _context.t0); //alert(\"error\", error);\n\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 15]]);\n  }));\n\n  return function isomorphicUnfetchData(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/jiasheng/Documents/GitHub/tbj/src/utils/api.js"],"names":["store","fetch","isomorphicUnfetchData","req","route","method","body","SERVER_HOST","SERVER_PORT","headers","cookie","undefined","JSON","stringify","credentials","response","ok","json","error","Error","status","statusText","dispatch","type","console","log"],"mappings":";;AAAA;AACA,SAASA,KAAT,QAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,IAAMC,qBAAqB;AAAA,uEAAG;AACN;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCC,YAAAA,GADiC,QACjCA,GADiC,EAC5BC,KAD4B,QAC5BA,KAD4B,EACrBC,MADqB,QACrBA,MADqB,EACbC,IADa,QACbA,IADa;AAAA;AAAA;AAAA,mBAIVL,KAAK,WAAIM,WAAJ,cAAmBC,WAAnB,cAAkCJ,KAAlC,GAA2C;AACrEC,cAAAA,MAAM,EAANA,MADqE;AAErEI,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,MAAM,EAAEP,GAAG,GAAGA,GAAG,CAACM,OAAJ,CAAYC,MAAf,GAAwBC;AAF5B,eAF4D;AAMrEL,cAAAA,IAAI,EAAEA,IAAI,GAAGM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAH,GAA0BK,SANiC;AAOrEG,cAAAA,WAAW,EAAE;AAPwD,aAA3C,CAJK;;AAAA;AAI3BC,YAAAA,QAJ2B;;AAAA,iBAe7BA,QAAQ,CAACC,EAfoB;AAAA;AAAA;AAAA;;AAAA,6CAgBxBD,QAAQ,CAACE,IAAT,EAhBwB;;AAAA;AAkB3BC,YAAAA,KAlB2B,GAkBnB,IAAIC,KAAJ,CACV,WAAWJ,QAAQ,CAACK,MAApB,GAA6B,IAA7B,GAAoCL,QAAQ,CAACM,UADnC,CAlBmB;;AAqB/B,gBAAIN,QAAQ,CAACK,MAAT,IAAmB,GAAvB,EAA4B;AAC1BpB,cAAAA,KAAK,CAACsB,QAAN,CAAe;AACbC,gBAAAA,IAAI,EAAE;AADO,eAAf,EAD0B,CAI1B;AACD;;AACDL,YAAAA,KAAK,CAACH,QAAN,GAAiBA,QAAjB;AA3B+B,kBA4BzBG,KA5ByB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuCjCM,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,eAvCiC,CAwCjC;;AAxCiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBvB,qBAAqB;AAAA;AAAA;AAAA,GAA3B","sourcesContent":["// import { SERVER_HOST, SERVER_PORT } from \"../../config\";\nimport { store } from \"../../src/state/redux/store\";\nimport fetch from \"isomorphic-unfetch\";\n\nexport const isomorphicUnfetchData = async (\n  { req, route, method, body } /* { req, route, method = \"GET\", body } */\n) => {\n  try {\n    const response = await fetch(`${SERVER_HOST}:${SERVER_PORT}/${route}`, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        cookie: req ? req.headers.cookie : undefined,\n      },\n      body: body ? JSON.stringify(body) : undefined,\n      credentials: \"include\",\n    });\n    //.then(\n    //(response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      var error = new Error(\n        \"Error \" + response.status + \": \" + response.statusText\n      );\n      if (response.status == 401) {\n        store.dispatch({\n          type: \"UNAUTHORIZED_REDIRECT\",\n        });\n        // throw \"unauthorized access\";\n      }\n      error.response = response;\n      throw error;\n    }\n    // },\n    // (error) => {\n    //   var errmess = new Error(error.message);\n    //   throw errmess;\n    // }\n    // )\n    // .then((response) => response.json());\n    // return response;\n  } catch (error) {\n    console.log(\"error\", error);\n    //alert(\"error\", error);\n\n    return error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}