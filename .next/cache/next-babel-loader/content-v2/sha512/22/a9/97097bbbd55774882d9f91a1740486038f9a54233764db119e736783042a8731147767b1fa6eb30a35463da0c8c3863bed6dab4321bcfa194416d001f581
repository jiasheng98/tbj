{"ast":null,"code":"// import { SERVER_HOST, SERVER_PORT } from \"../../config\";\nimport { store } from \"../../src/state/redux/store\";\nimport fetch from \"isomorphic-unfetch\";\nexport const isomorphicUnfetchData = async ({\n  req,\n  route,\n  method,\n  body\n}\n/* { req, route, method = \"GET\", body } */\n) => {\n  try {\n    const response = await fetch(`${SERVER_HOST}:${SERVER_PORT}/${route}`, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        cookie: req ? req.headers.cookie : undefined\n      },\n      body: body ? JSON.stringify(body) : undefined,\n      credentials: \"include\"\n    }); //.then(\n    //(response) => {\n\n    if (response.ok) {\n      return response.json();\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n\n      if (response.status == 401) {\n        store.dispatch({\n          type: \"UNAUTHORIZED_REDIRECT\"\n        }); // throw \"unauthorized access\";\n      }\n\n      error.response = response;\n      throw error;\n    } // },\n    // (error) => {\n    //   var errmess = new Error(error.message);\n    //   throw errmess;\n    // }\n    // )\n    // .then((response) => response.json());\n    // return response;\n\n  } catch (error) {\n    console.log(\"error\", error); //alert(\"error\", error);\n\n    return error;\n  }\n};","map":{"version":3,"sources":["/Users/jiasheng/Documents/GitHub/tbj/src/utils/api.js"],"names":["store","fetch","isomorphicUnfetchData","req","route","method","body","response","SERVER_HOST","SERVER_PORT","headers","cookie","undefined","JSON","stringify","credentials","ok","json","error","Error","status","statusText","dispatch","type","console","log"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OACnC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB;AAA6B;AADM,KAEhC;AACH,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAE,GAAEO,WAAY,IAAGC,WAAY,IAAGL,KAAM,EAAxC,EAA2C;AACrEC,MAAAA,MADqE;AAErEK,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAER,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAYC,MAAf,GAAwBC;AAF5B,OAF4D;AAMrEN,MAAAA,IAAI,EAAEA,IAAI,GAAGO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAH,GAA0BM,SANiC;AAOrEG,MAAAA,WAAW,EAAE;AAPwD,KAA3C,CAA5B,CADE,CAUF;AACA;;AACA,QAAIR,QAAQ,CAACS,EAAb,EAAiB;AACf,aAAOT,QAAQ,CAACU,IAAT,EAAP;AACD,KAFD,MAEO;AACL,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CACV,WAAWZ,QAAQ,CAACa,MAApB,GAA6B,IAA7B,GAAoCb,QAAQ,CAACc,UADnC,CAAZ;;AAGA,UAAId,QAAQ,CAACa,MAAT,IAAmB,GAAvB,EAA4B;AAC1BpB,QAAAA,KAAK,CAACsB,QAAN,CAAe;AACbC,UAAAA,IAAI,EAAE;AADO,SAAf,EAD0B,CAI1B;AACD;;AACDL,MAAAA,KAAK,CAACX,QAAN,GAAiBA,QAAjB;AACA,YAAMW,KAAN;AACD,KA1BC,CA2BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAnCD,CAmCE,OAAOA,KAAP,EAAc;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAArB,EADc,CAEd;;AAEA,WAAOA,KAAP;AACD;AACF,CA5CM","sourcesContent":["// import { SERVER_HOST, SERVER_PORT } from \"../../config\";\nimport { store } from \"../../src/state/redux/store\";\nimport fetch from \"isomorphic-unfetch\";\n\nexport const isomorphicUnfetchData = async (\n  { req, route, method, body } /* { req, route, method = \"GET\", body } */\n) => {\n  try {\n    const response = await fetch(`${SERVER_HOST}:${SERVER_PORT}/${route}`, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        cookie: req ? req.headers.cookie : undefined,\n      },\n      body: body ? JSON.stringify(body) : undefined,\n      credentials: \"include\",\n    });\n    //.then(\n    //(response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      var error = new Error(\n        \"Error \" + response.status + \": \" + response.statusText\n      );\n      if (response.status == 401) {\n        store.dispatch({\n          type: \"UNAUTHORIZED_REDIRECT\",\n        });\n        // throw \"unauthorized access\";\n      }\n      error.response = response;\n      throw error;\n    }\n    // },\n    // (error) => {\n    //   var errmess = new Error(error.message);\n    //   throw errmess;\n    // }\n    // )\n    // .then((response) => response.json());\n    // return response;\n  } catch (error) {\n    console.log(\"error\", error);\n    //alert(\"error\", error);\n\n    return error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}